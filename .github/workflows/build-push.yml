name: Deploy - Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
    tags:
      - "v*.*.*"

jobs:
  buildpush:
    name: Build ➡️ Push
    runs-on: ubuntu-latest
    env:
      REGISTRY_IMAGE: docker.io/rooibos75/devops-toolkit
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set IMAGE_TAG
        id: tag
        run: |
          ref="${GITHUB_REF##*/}"
          if [[ "$ref" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "image_tag=$ref" >> $GITHUB_OUTPUT
            echo "is_semver=true" >> $GITHUB_OUTPUT
          else
            echo "image_tag=$ref-${{ github.run_number }}" >> $GITHUB_OUTPUT
          fi

      - name: Load versions from JSON
        id: versions
        run: |
          BUILD_ARGS=$(jq -r 'to_entries | map("--build-arg \(.key)=\(.value)") | join(" ")' versions.json)
          BUILD_ARGS="$BUILD_ARGS --build-arg REGISTRY_IMAGE=${REGISTRY_IMAGE}"
          BUILD_ARGS="$BUILD_ARGS --build-arg BASE_VERSION=${{ steps.tag.outputs.image_tag }}"
          echo "build_args=$BUILD_ARGS" >> $GITHUB_OUTPUT
          echo "Build arguments: $BUILD_ARGS"

      - name: Build the Docker image
        env:
          IMAGE_TAG: ${{ steps.tag.outputs.image_tag }}
        run: |
          docker buildx create --use --name xbuilder 
          docker buildx build -f Dockerfile --progress plain --push -t ${REGISTRY_IMAGE}:${IMAGE_TAG} \
            --cache-to type=registry,ref=${REGISTRY_IMAGE}:build-cache \
            --cache-from type=registry,ref=${REGISTRY_IMAGE}:build-cache \
            ${{ steps.versions.outputs.build_args }} \
            .
          if [[ "${{ steps.tag.outputs.is_semver }}" == "true" ]]; then
            echo "Tagging image ${REGISTRY_IMAGE}:${IMAGE_TAG} as latest"
            docker tag ${REGISTRY_IMAGE}:${IMAGE_TAG} ${REGISTRY_IMAGE}:latest
          fi

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@0.30.0
        if: ${{  steps.tag.outputs.is_semver == 'true'  }}
        with:
          image-ref: ${{ env.REGISTRY_IMAGE }}:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push latest tag if semver
        if: ${{  steps.tag.outputs.is_semver == 'true'  }}
        run: |
          docker push ${REGISTRY_IMAGE}:latest

